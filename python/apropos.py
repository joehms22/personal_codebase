#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Fri Oct 29 10:43:01 2010

import wx

# begin wxGlade: extracode
# end wxGlade



class MainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "Program Search", style=wx.ALIGN_CENTRE)
        self.text_ctrl_1 = wx.TextCtrl(self, -1, "")
        self.label_2 = wx.StaticText(self, -1, "Results:")
        self.text_ctrl_2 = wx.TextCtrl(self, -1, "Enter search terms above:\nPrograms will appear here.", style=wx.TE_MULTILINE|wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT, self.enter_search_text, self.text_ctrl_1)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MainFrame.__set_properties
        self.SetTitle("Program Search")
        self.SetSize((500, 250))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.label_1, 0, wx.EXPAND, 0)
        sizer_1.Add(self.text_ctrl_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_1.Add(self.label_2, 0, wx.LEFT, 5)
        sizer_1.Add(self.text_ctrl_2, 1, wx.ALL|wx.EXPAND, 5)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade
    
    def show_help_text(self):
        text='''Enter a query above, program names will appear below.  
Ex: calculator, tells you the different calculators on your system.


This is a frontend for the apropos command.
Created by: Joseph Lewis <joehms22@gmail.com>'''
        self.text_ctrl_2.Clear()
        #print new search query
        self.text_ctrl_2.AppendText(text)
        

    def enter_search_text(self, event): # wxGlade: MainFrame.<event_handler>
        import subprocess
        process = subprocess.Popen(["apropos", self.text_ctrl_1.GetValue()], stdout=subprocess.PIPE)
        output, unused_err = process.communicate()
        #clear output
        self.text_ctrl_2.Clear()
        #print new search query
        self.text_ctrl_2.AppendText(output)
            
        event.Skip()
        '''
        #if text none, replace with default msg
        if self.text_ctrl_1.GetValue() == "":
            self.show_help_text()
        #if text, search
        else:
            import subprocess
            process = subprocess.Popen(["apropos", self.text_ctrl_1.GetValue()], stdout=subprocess.PIPE)
            output, unused_err = process.communicate()
            retcode = process.poll()
            #clear output
            self.text_ctrl_2.Clear()
            #print new search query
            self.text_ctrl_2.AppendText(output)
            
        event.Skip()
        '''

# end of class MainFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MainFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    frame_1.show_help_text()
    app.MainLoop()
