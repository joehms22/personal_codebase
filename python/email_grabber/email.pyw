#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Wed Mar 24 11:22:54 2010

import wx

# begin wxGlade: extracode
# end wxGlade



class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, -1, "URL:")
        self.url = wx.TextCtrl(self, -1, "Put a URL Here")
        self.input = wx.TextCtrl(self, -1, "OR put text here\n\nEmails will be output Below.", style=wx.TE_MULTILINE)
        self.submit = wx.Button(self, -1, "Get From Text")
        self.button_3 = wx.Button(self, -1, "Get From URL")
        self.button_1 = wx.Button(self, -1, "Clear Text (Above)")
        self.button_2 = wx.Button(self, -1, "Clear Emails (Below)")
        self.output = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE)
        self.save = wx.Button(self, wx.ID_SAVE, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.process_input, self.submit)
        self.Bind(wx.EVT_BUTTON, self.process_url, self.button_3)
        self.Bind(wx.EVT_BUTTON, self.clear_web, self.button_1)
        self.Bind(wx.EVT_BUTTON, self.clear_email, self.button_2)
        self.Bind(wx.EVT_BUTTON, self.save_doc, self.save)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Email Grabber <joehms22@gmail.com> - GNU GPL V.3.0")
        self.SetSize((640, 480))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(self.label_1, 0, 0, 0)
        sizer_4.Add(self.url, 1, wx.EXPAND, 0)
        sizer_2.Add(sizer_4, 0, wx.EXPAND, 0)
        sizer_2.Add(self.input, 1, wx.EXPAND, 0)
        sizer_3.Add(self.submit, 0, 0, 0)
        sizer_3.Add(self.button_3, 0, 0, 0)
        sizer_3.Add(self.button_1, 0, 0, 0)
        sizer_3.Add(self.button_2, 0, 0, 0)
        sizer_2.Add(sizer_3, 0, wx.EXPAND, 0)
        sizer_2.Add(self.output, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        sizer_1.Add(self.save, 0, 0, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def process_input(self, event): # wxGlade: MyFrame.<event_handler>
        import re
        email_pattern = re.compile('([\w\-\.]+@(\w[\w\-]+\.)+[\w\-]+)')

        # there are several matches per line
        for match in email_pattern.findall(self.input.GetValue()):
            self.output.AppendText(match[0] + ",\t")
        #Clear url and text
        self.input.Clear()
        self.text_ctrl_1.Clear()
        event.Skip()

    def clear_web(self, event): # wxGlade: MyFrame.<event_handler>
        self.input.Clear()
        event.Skip()

    def clear_email(self, event): # wxGlade: MyFrame.<event_handler>
        self.output.Clear()
        event.Skip()

    def process_url(self, event): # wxGlade: MyFrame.<event_handler>
        from urllib import urlopen
        import re
        email_pattern = re.compile('([\w\-\.]+@(\w[\w\-]+\.)+[\w\-]+)')

        # there are several matches per line
        for match in email_pattern.findall(urlopen(
                                        self.url.GetValue()).read()):
            self.output.AppendText(match[0] + ", ")
        #Clear url and text
        self.input.Clear()
        self.url.Clear()
        event.Skip()

    def save_doc(self, event): # wxGlade: MyFrame.<event_handler>
        import os
        dlg = wx.FileDialog(self, "Save a file", os.getcwd(), "", "Text Files (*.txt)|*.txt|Comma Seperated Value Files (*.csv)|*.csv|All Files|*.*", wx.SAVE)
        if dlg.ShowModal() == wx.ID_OK:
            path = dlg.GetPath()
            if dlg.GetFilterIndex() == 0:
                path = path+".txt"
            if dlg.GetFilterIndex() == 1:
                path = path+".csv"
            print "Saving at: %s" % (path)
            
            file = open(path, 'w')
            file.write(self.output.GetValue())
            file.close()
        dlg.Destroy()

        event.Skip()

# end of class MyFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
